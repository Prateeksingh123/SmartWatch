{"version":3,"sources":["ProductDetails/ProductDetails.module.css","App.module.css","ProductPreview/ProductPreview.module.css","Topbar/Topbar.module.css","Utils/ProductData.js","ProductDetails/ProductDetails.js","ProductPreview/ProductPreview.js","Topbar/Topbar.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ProductData","title","description","colorOptions","styleName","imageUrl","featureList","Object","freeze","ProductDetails","props","data","map","item","pos","classArr","classes","ProductImage","currentPreviewImagePos","push","SelectedProductImage","className","join","src","alt","onClick","onColorOptionClick","FeatureItem","currentSelectedFeature","SelectedFeatureItem","onFeatureItemClick","PorductData","ProductTitle","ProductDescription","SectionHeading","PrimaryButton","ProductPreview","currentHour","Date","getHours","currentMinute","getMinutes","currentPreviewImage","HeartBeatSection","TimeSection","Topbar","App","state","productData","setState","MainContainer","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd5bd773.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProductData\":\"ProductDetails_ProductData__3yvMw\",\"ProductTitle\":\"ProductDetails_ProductTitle__3OIlM\",\"ProductDescription\":\"ProductDetails_ProductDescription__1rq_l\",\"SectionHeading\":\"ProductDetails_SectionHeading__aSP1O\",\"ProductImage\":\"ProductDetails_ProductImage__11jOh\",\"SelectedProductImage\":\"ProductDetails_SelectedProductImage__1znA8\",\"FeatureItem\":\"ProductDetails_FeatureItem__o43Si\",\"SelectedFeatureItem\":\"ProductDetails_SelectedFeatureItem__1WK4T\",\"PrimaryButton\":\"ProductDetails_PrimaryButton__2aWIX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"App_MainContainer__1oCyn\",\"ProductPreview\":\"App_ProductPreview__3Ve0G\",\"ProductData\":\"App_ProductData__j60iI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProductPreview\":\"ProductPreview_ProductPreview__1jclC\",\"TimeSection\":\"ProductPreview_TimeSection__3ayGw\",\"HeartBeatSection\":\"ProductPreview_HeartBeatSection__23fE3\",\"beat\":\"ProductPreview_beat__w9nsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Topbar\":\"Topbar_Topbar__32Jp9\"};","const ProductData = {\r\n    title: 'FitBit 19 - The Smartest Watch',\r\n    description: 'Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor.',\r\n    colorOptions: [\r\n        {\r\n            styleName: 'Black Strap',\r\n            imageUrl: 'https://imgur.com/iOeUBV7.png'\r\n        },\r\n        {\r\n            styleName: 'Red Strap',\r\n            imageUrl: 'https://imgur.com/PTgQlim.png'\r\n        },\r\n        {\r\n            styleName: 'Blue Strap',\r\n            imageUrl: 'https://imgur.com/Mplj1YR.png'\r\n        },\r\n        {\r\n            styleName: 'Purple Strap',\r\n            imageUrl: 'https://imgur.com/xSIK4M8.png'\r\n        },\r\n    ],\r\n    featureList: [\r\n        \"Time\", \"Heart Rate\"\r\n    ]\r\n}\r\n\r\nObject.freeze(ProductData); //This line of code just makes your object as a constant. No values can be updated.\r\n\r\nexport default ProductData;","import React from 'react';\r\nimport classes from './ProductDetails.module.css';\r\n\r\nconst ProductDetails = (props) => {\r\n    const colorOptions = props.data.colorOptions.map((item, pos) => {\r\n        const classArr = [classes.ProductImage];\r\n        if(pos === props.currentPreviewImagePos) {\r\n            classArr.push(classes.SelectedProductImage);\r\n        }\r\n        return(\r\n            <img key={pos} className={classArr.join(' ')} src={item.imageUrl} alt={item.styleName} \r\n            onClick={() => props.onColorOptionClick(pos)}/>\r\n        );\r\n    })\r\n\r\n    const featureList = props.data.featureList.map((item, pos) => {\r\n        const classArr = [classes.FeatureItem];\r\n\r\n        if(pos === props.currentSelectedFeature) {\r\n            classArr.push(classes.SelectedFeatureItem);\r\n        }\r\n\r\n        return(\r\n            <button onClick={() => props.onFeatureItemClick(pos)} key={pos} className = {classArr.join(' ')}>{item}</button>\r\n        );\r\n    })\r\n\r\n    return(\r\n        <div className={classes.PorductData}>\r\n          <h1 className={classes.ProductTitle}>{props.data.title}</h1>\r\n          <p className={classes.ProductDescription}>{props.data.description}</p>\r\n\r\n          <h3 className={classes.SectionHeading}>Select Color</h3>\r\n          <div>\r\n            {colorOptions}\r\n          </div>\r\n\r\n          <h3 className={classes.SectionHeading}>Features</h3>\r\n          <div>{featureList}</div>\r\n\r\n          <button className={classes.PrimaryButton}>Buy Now</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductDetails;","import React from 'react';\r\n\r\nimport classes from './ProductPreview.module.css';\r\n\r\nconst ProductPreview = (props) => {\r\n    const currentHour = new Date().getHours() > 9 ? new Date().getHours() : '0' + new Date().getHours();\r\n    const currentMinute = new Date().getMinutes() > 9 ? new Date().getMinutes() : '0' + new Date().getMinutes();\r\n    \r\n    return(\r\n        <div className={classes.ProductPreview}>\r\n            <img src={props.currentPreviewImage} alt=\"Product Preview\"/>\r\n            \r\n            {\r\n                props.currentSelectedFeature === 1 ?\r\n                <div className={classes.HeartBeatSection}>\r\n                    <i className=\"fas fa-heartbeat\"></i>\r\n                    <p>78</p>\r\n                </div>\r\n                :\r\n                <div className={classes.TimeSection}>\r\n                    <p>{`${currentHour}:${currentMinute}`}</p>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductPreview;","import React from 'react';\r\nimport classes from './Topbar.module.css';\r\n\r\nconst Topbar = () => {\r\n    return(\r\n        <header>\r\n            <nav className={classes.Topbar}>\r\n            <img src=\"https://i.dlpng.com/static/png/197684_preview.png\" alt=\"Amazon Logo\" />\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Topbar;","import React, { Component } from 'react';\nimport classes from './App.module.css';\nimport ProductData from './Utils/ProductData';\n\nimport ProductDetails from './ProductDetails/ProductDetails';\nimport ProductPreview from './ProductPreview/ProductPreview';\nimport Topbar from './Topbar/Topbar';\n\nclass App extends Component {\n  state = {\n    productData: ProductData,\n    currentPreviewImagePos: 0,\n    currentSelectedFeature: 0,\n  }\n\n  onColorOptionClick = (pos) => {\n    this.setState({currentPreviewImagePos: pos});\n  }\n\n  onFeatureItemClick = (pos) => {\n    this.setState({currentSelectedFeature: pos});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <Topbar />\n  \n        <div className={classes.MainContainer}>\n          <div className={classes.ProductPreview}>\n            <ProductPreview currentPreviewImage={this.state.productData.colorOptions[this.state.currentPreviewImagePos].imageUrl} \n            currentSelectedFeature={this.state.currentSelectedFeature} />\n          </div>\n  \n          <div className={classes.PorductData}>\n            <ProductDetails data={this.state.productData} onColorOptionClick = {this.onColorOptionClick}\n            currentPreviewImagePos = {this.state.currentPreviewImagePos} onFeatureItemClick = {this.onFeatureItemClick}\n            currentSelectedFeature={this.state.currentSelectedFeature}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}